services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-referral_db}
      POSTGRES_USER: ${POSTGRES_USER:-referral_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5

  web:
    build: .
    restart: unless-stopped
    command: >
      sh -c "
      python manage.py collectstatic --noinput &&
      gunicorn referral_project.wsgi:application --bind 0.0.0.0:8000"
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"

volumes:
  postgres_data:
  redis_data:
  static_volume: